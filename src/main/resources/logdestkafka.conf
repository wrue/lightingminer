logdstagent.sources = avrotestsource
logdstagent.channels = filedst kafkafile
logdstagent.sinks = logsyncsink kafkasink

logdstagent.sources.avrotestsource.type = avro
logdstagent.sources.avrotestsource.selector.type = replicating
logdstagent.sources.avrotestsource.channels = filedst kafkafile
logdstagent.sources.avrotestsource.port = ${collector.port}
logdstagent.sources.avrotestsource.bind = 0.0.0.0
logdstagent.sources.avrotestsource.threads = 30


logdstagent.channels.filedst.type = file
logdstagent.channels.filedst.capacity = 100000
logdstagent.channels.filedst.checkpointDir = ${collector.checkpointDir}
logdstagent.channels.filedst.dataDirs = ${collector.dataDirs}

logdstagent.channels.kafkafile.type = file
logdstagent.channels.kafkafile.capacity = 100000
logdstagent.channels.kafkafile.checkpointDir = ${kafka.collector.checkpointDir}
logdstagent.channels.kafkafile.dataDirs = ${kafka.collector.dataDirs}

logdstagent.sinks.logsyncsink.type = com.creditease.ns.miner.flume.sink.LogSyncSink
logdstagent.sinks.logsyncsink.channel = filedst
logdstagent.sinks.logsyncsink.logConf = logconfig.xml
logdstagent.sinks.logsyncsink.logDir = ${collector.logDir}
logdstagent.sinks.logsyncsink.batchSize = 10000
logdstagent.sinks.logsyncsink.maxIoWorkers = 50



logdstagent.sinks.kafkasink.type = com.creditease.ns.miner.flume.sink.kafka.KafkaSink
logdstagent.sinks.kafkasink.channel = kafkafile
logdstagent.sinks.kafkasink.kafka.topic = ${kafkasink.kafka.topic}
logdstagent.sinks.kafkasink.kafka.bootstrap.servers = ${kafkasink.kafka.bootstrap.servers}
logdstagent.sinks.kafkasink.kafka.flumeBatchSize = 1000
logdstagent.sinks.kafkasink.kafka.producer.acks = 1
logdstagent.sinks.kafkasink.kafka.producer.max.request.size = 10485760
logdstagent.sinks.kafkasink.kafka.producer.linger.ms = 1
logdstagent.sinks.kafkasink.kafka.producer.compression.type = snappy